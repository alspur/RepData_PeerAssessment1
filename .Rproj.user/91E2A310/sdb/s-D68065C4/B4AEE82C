{
    "contents" : "Peer Assessment 1 - Reproducable Research\n========================================================\n\n\n## Load and process the data\n\nThe first step is to load the file `activity.csv` from the working directory.\n\n```{r}\nactivity.data <- read.csv(\"activity.csv\")\n```\n\n\n## What is mean total number of steps taken per day?\n\nIn order to aggregate the step count data into days, we will use functions from the `dplyr` package.\n\n```{r}\nlibrary(dplyr)\nactivity.days <- activity.data %.% \n    group_by(date) %.% \n    summarise(steps =sum(steps, na.rm = TRUE))\n```\n\nUsing this aggregated data, which creates the sum of steps for each day in the dataset, we can:\n\n* Plot a histogram of the total number of steps taken each day  \n* Calculate the median total steps taken each day\n* Calculate the mean total steps taken each day\n\n```{r fig.width=7, fig.height=6}\nhist(activity.days$steps, main = \"Histogram of total\\nsteps taken each day\", breaks = 10)\n\noriginal.median <- median(activity.days$steps, na.rm = TRUE)\noriginal.mean <- mean(activity.days$steps, na.rm = TRUE)\n\n\noriginal.median <- format(original.median, nsmall = 2, big.mark = \",\")\noriginal.mean <- format(original.mean, nsmall = 2, big.mark = \",\")\n```\n\nThe calculated median of this data, ignoring `NA` values, is **`r original.median`**.\n\nThe calculated mean of this data, ignoring `NA` values, is **`r original.mean`**.\n\n## What is the daily activity pattern?\n\nWe can also aggregate the data in 5-minute intervals so we can plot the average daily movement pattern.\n\n```{r}\n\nactivity.interval <- activity.data %.% \n    group_by(interval) %.%\n    summarise(steps = mean(steps, na.rm = TRUE))\n\nplot(activity.interval$interval, activity.interval$steps, type = \"l\",\n     main = \"Average Steps by 5 Minute Interval\",\n     xlab=\"Interval\",ylab=\"Average Number of Steps\")\n```\n\nOn average, the interval **`835`** contains the most steps on any given day.\n\n```{r}\nactivity.interval$interval[activity.interval$steps == max(activity.interval$steps, na.rm = TRUE)]\n\n```\n\n## Imputing missing values\n\n```{r}\nna.idx <- is.na(activity.data$steps)\n\nna.total <- sum(na.idx)\n```\n\nIf we calculate total number of rows with `NA` values in the `steps` column, we can see that there are **`r na.total`** rows with missing data.\n\nIn order to impute the missing data, we will duplicate the dataset, then replace each `NA` value with the mean number of steps for that interval, using values the `activity.imputed` dataset.\n\n```{r}\nactivity.imputed <- activity.data\n\nfor(i in seq_along(activity.imputed$steps)){\n    if(is.na(activity.imputed$steps[i])){\n        \n        impute.data <- activity.interval[activity.interval$interval == \n                                             activity.imputed$interval[i],]\n        \n        activity.imputed$steps[i] <- impute.data$steps\n    }\n    \n}\n```\n\nAggregating the imputed data, we can plot a histogram of the total number of steps taken each day and calculate the median and mean for total steps taken in a day with this new data.\n\n```{r fig.width=7, fig.height=6}\nimputed.days <- activity.imputed %.% \n    group_by(date) %.%\n    summarise(steps = sum(steps))\n\nhist(imputed.days$steps, main = \"Histogram of total (imputed)\\nsteps taken each day\", breaks = 10)\n\nimputed.median <- median(imputed.days$steps, na.rm = TRUE)\nimputed.mean <- mean(imputed.days$steps, na.rm = TRUE)\n\nimputed.median <- format(imputed.median, nsmall = 2, big.mark = \",\")\nimputed.mean <- format(imputed.mean, nsmall = 2, big.mark = \",\")\n\n```\n\nHow do the new median and mean calculations differ from the origninal?\n\n| Data Type | Median | Mean |\n|:------:|------:|-----:|\n|Original| `r original.median` | `r original.mean`|\n|Imputed| `r imputed.median` | `r imputed.mean`|\n\nTwo trends stand out:\n\n1. The original median and mean are both lower than that of the imputed dataset.\n2. There is no difference between the imputed median and mean, but there is a difference between the original median and mean.\n\n## Are there differences in activity patterns between weekdays and weekends?\n\nFirst, we need to create a factor variable, `day.type` to flag if a day is a weekday or a weekend day. To accomplish this, we will use the `ymd()` function from the `lubridate` package to convert the date strings into a weekday same, such as Monday, Tuesday, Wednesday, etc. We will then run a `for` loop to create a `day.type` column that will indicate if a particular observation is on a weekend (Saturay or Sunday) or a weekday (all other days).\n\n```{r}\nlibrary(lubridate)\n\nactivity.data <- activity.data %.% \n    mutate(weekday = weekdays(ymd(as.character(date))))\n\nactivity.data$day.type <- \"Weekday\"\n\nfor(j in seq_along(activity.data$weekday)){\n    if(activity.data$weekday[j] == \"Saturday\"){\n        activity.data$day.type[j] <- \"Weekend\"\n    }\n    if(activity.data$weekday[j] == \"Sunday\"){\n        activity.data$day.type[j] <- \"Weekend\"\n    }\n}\n\nactivity.data$day.type <- as.factor(activity.data$day.type)\n```\n\nWe can then plot the data to see how daily activity patterns weekdays differ from the pattern on weekends.\n\n```{r}\n\nactivity.daytype <- activity.data %.% \n    group_by(day.type, interval) %.%\n    summarise(steps = mean(steps, na.rm = TRUE))\n\nlibrary(ggplot2)\n\nggplot(activity.daytype, aes(x = interval, y = steps, group = day.type))+\n    geom_line()+\n    facet_grid(day.type~.)+\n    labs(x = \"Interval\", y = \"Average Number of Steps\")+\n    theme_bw()\n\n```",
    "created" : 1400417192071.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "658185329",
    "id" : "B4AEE82C",
    "lastKnownWriteTime" : 1400417242,
    "path" : "~/Dropbox/reproducableResearch/RepData_PeerAssessment1/PA1_template.Rmd",
    "project_path" : "PA1_template.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}